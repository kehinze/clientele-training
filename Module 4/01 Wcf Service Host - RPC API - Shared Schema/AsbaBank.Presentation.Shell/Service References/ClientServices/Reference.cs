//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AsbaBank.Presentation.Shell.ClientServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientDto", Namespace="http://schemas.datacontract.org/2004/07/AsbaBank.ApplicationService.Dtos")]
    [System.SerializableAttribute()]
    public partial class ClientDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="AsbaBank.Clients", ConfigurationName="ClientServices.ClientService")]
    public interface ClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="AsbaBank.Clients/ClientService/RegisterClient", ReplyAction="AsbaBank.Clients/ClientService/RegisterClientResponse")]
        void RegisterClient(string clientName, string clientSurname, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="AsbaBank.Clients/ClientService/RegisterClient", ReplyAction="AsbaBank.Clients/ClientService/RegisterClientResponse")]
        System.Threading.Tasks.Task RegisterClientAsync(string clientName, string clientSurname, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="AsbaBank.Clients/ClientService/UpdateClientAddress", ReplyAction="AsbaBank.Clients/ClientService/UpdateClientAddressResponse")]
        void UpdateClientAddress(int clientId, string streetNumber, string street, string city, string postalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="AsbaBank.Clients/ClientService/UpdateClientAddress", ReplyAction="AsbaBank.Clients/ClientService/UpdateClientAddressResponse")]
        System.Threading.Tasks.Task UpdateClientAddressAsync(int clientId, string streetNumber, string street, string city, string postalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="AsbaBank.Clients/ClientService/FetchAllClients", ReplyAction="AsbaBank.Clients/ClientService/FetchAllClientsResponse")]
        AsbaBank.Presentation.Shell.ClientServices.ClientDto[] FetchAllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="AsbaBank.Clients/ClientService/FetchAllClients", ReplyAction="AsbaBank.Clients/ClientService/FetchAllClientsResponse")]
        System.Threading.Tasks.Task<AsbaBank.Presentation.Shell.ClientServices.ClientDto[]> FetchAllClientsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ClientServiceChannel : AsbaBank.Presentation.Shell.ClientServices.ClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<AsbaBank.Presentation.Shell.ClientServices.ClientService>, AsbaBank.Presentation.Shell.ClientServices.ClientService {
        
        public ClientServiceClient() {
        }
        
        public ClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegisterClient(string clientName, string clientSurname, string phoneNumber) {
            base.Channel.RegisterClient(clientName, clientSurname, phoneNumber);
        }
        
        public System.Threading.Tasks.Task RegisterClientAsync(string clientName, string clientSurname, string phoneNumber) {
            return base.Channel.RegisterClientAsync(clientName, clientSurname, phoneNumber);
        }
        
        public void UpdateClientAddress(int clientId, string streetNumber, string street, string city, string postalCode) {
            base.Channel.UpdateClientAddress(clientId, streetNumber, street, city, postalCode);
        }
        
        public System.Threading.Tasks.Task UpdateClientAddressAsync(int clientId, string streetNumber, string street, string city, string postalCode) {
            return base.Channel.UpdateClientAddressAsync(clientId, streetNumber, street, city, postalCode);
        }
        
        public AsbaBank.Presentation.Shell.ClientServices.ClientDto[] FetchAllClients() {
            return base.Channel.FetchAllClients();
        }
        
        public System.Threading.Tasks.Task<AsbaBank.Presentation.Shell.ClientServices.ClientDto[]> FetchAllClientsAsync() {
            return base.Channel.FetchAllClientsAsync();
        }
    }
}
